-- Generated by Oracle SQL Developer Data Modeler 20.3.0.283.0710
--   at:        2021-01-16 01:47:18 CET
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g



-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE TABLE admin (
    jmbg VARCHAR2(60 CHAR) NOT NULL
);

ALTER TABLE admin ADD CONSTRAINT admin_pk PRIMARY KEY ( jmbg );

CREATE TABLE grad (
    postanskibroj  VARCHAR2(60 CHAR) NOT NULL,
    nazivgrada     VARCHAR2(60 CHAR) NOT NULL
);

ALTER TABLE grad ADD CONSTRAINT grad_pk PRIMARY KEY ( postanskibroj );

CREATE TABLE ima_uslugu (
    kodusluge           VARCHAR2(60 CHAR) NOT NULL,
    idposlovnogobjekta  INTEGER NOT NULL
);

ALTER TABLE ima_uslugu ADD CONSTRAINT ima_uslugu_pk PRIMARY KEY ( idposlovnogobjekta,
                                                                  kodusluge );

CREATE TABLE klijent (
    prezimeklijenta      VARCHAR2(60 CHAR) NOT NULL,
    emailklijenta        VARCHAR2(60 CHAR),
    telefonklijenta      VARCHAR2(60 CHAR) NOT NULL,
    imeklijenta          VARCHAR2(60 CHAR) NOT NULL,
    blokiraojmbg         VARCHAR2(60 CHAR),
    vremeblokaklijenta   DATE,
    razlogblokaklijenta  VARCHAR2(60 CHAR)
);

ALTER TABLE klijent
    ADD CHECK ( ( blokiraojmbg IS NULL
                  AND vremeblokaklijenta IS NULL
                  AND razlogblokaklijenta IS NULL )
                OR ( blokiraojmbg IS NOT NULL
                     AND vremeblokaklijenta IS NOT NULL ) );

ALTER TABLE klijent ADD CONSTRAINT klijent_pk PRIMARY KEY ( telefonklijenta );

CREATE TABLE paket (
    cenapaketa   INTEGER NOT NULL,
    nazivpaketa  VARCHAR2(60 CHAR) NOT NULL,
    idpaketa     INTEGER NOT NULL
);

ALTER TABLE paket ADD CONSTRAINT paket_pk PRIMARY KEY ( idpaketa );

CREATE TABLE poslovniobjekat (
    idposlovnogobjekta     INTEGER NOT NULL,
    nazivulice             VARCHAR2(60 CHAR),
    brojulice              VARCHAR2(60 CHAR),
    nazivposlovnogobjekta  VARCHAR2(60 CHAR) NOT NULL,
    postanskibroj          VARCHAR2(60 CHAR) NOT NULL,
    pib                    VARCHAR2(60 CHAR) NOT NULL
);

ALTER TABLE poslovniobjekat ADD CONSTRAINT poslovniobjekat_pk PRIMARY KEY ( idposlovnogobjekta );

CREATE TABLE preduzece (
    pib             VARCHAR2(60 CHAR) NOT NULL,
    nazivpreduzeca  VARCHAR2(60 CHAR) NOT NULL,
    brojracuna      VARCHAR2(60 CHAR) NOT NULL
);

ALTER TABLE preduzece ADD CONSTRAINT preduzece_pk PRIMARY KEY ( pib );

CREATE TABLE pruza_uslugu (
    jmbg                VARCHAR2(60 CHAR) NOT NULL,
    idposlovnogobjekta  INTEGER NOT NULL,
    kodusluge           VARCHAR2(60 CHAR) NOT NULL
);

ALTER TABLE pruza_uslugu
    ADD CONSTRAINT pruza_uslugu_pk PRIMARY KEY ( idposlovnogobjekta,
                                                 kodusluge,
                                                 jmbg );

CREATE TABLE radnik (
    jmbg VARCHAR2(60 CHAR) NOT NULL
);

ALTER TABLE radnik ADD CONSTRAINT radnik_pk PRIMARY KEY ( jmbg );

CREATE TABLE radnovreme (
    idradnogvremena       INTEGER NOT NULL,
    pocetakradnogvremena  DATE NOT NULL,
    krajradnogvremena     DATE NOT NULL,
    jmbg                  VARCHAR2(60 CHAR) NOT NULL
);

ALTER TABLE radnovreme ADD CONSTRAINT radnovreme_pk PRIMARY KEY ( idradnogvremena );

CREATE TABLE sadrzi (
    idugovora  INTEGER NOT NULL,
    pib        VARCHAR2(60 CHAR) NOT NULL,
    idpaketa   INTEGER NOT NULL
);

ALTER TABLE sadrzi
    ADD CONSTRAINT sadrzi_pk PRIMARY KEY ( idugovora,
                                           pib,
                                           idpaketa );

CREATE TABLE ugovor (
    idugovora          INTEGER NOT NULL,
    datumpotpisivanja  DATE NOT NULL,
    datumisteka        DATE NOT NULL,
    pib                VARCHAR2(60 CHAR) NOT NULL
);

ALTER TABLE ugovor ADD CONSTRAINT ugovor_pk PRIMARY KEY ( idugovora,
                                                          pib );

CREATE TABLE usluga (
    kodusluge            VARCHAR2(60 CHAR) NOT NULL,
    nazivusluge          VARCHAR2(60 CHAR) NOT NULL,
    cenausluge           INTEGER NOT NULL,
    vremetrajanjausluge  INTERVAL DAY(9) TO SECOND(0) NOT NULL,
    pib                  VARCHAR2(60 CHAR) NOT NULL
);

ALTER TABLE usluga ADD CONSTRAINT usluga_pk PRIMARY KEY ( kodusluge );

CREATE TABLE zadatak (
    idzadatka            INTEGER NOT NULL,
    nazivzadatka         VARCHAR2(60) NOT NULL,
    vremepocetkazadatka  DATE NOT NULL,
    vremekrajazadatka    DATE NOT NULL,
    jmbg                 VARCHAR2(60 CHAR) NOT NULL
);

ALTER TABLE zadatak ADD CONSTRAINT zadatak_pk PRIMARY KEY ( idzadatka );

CREATE TABLE zakaze_termin (
    vremepocetkatermina  DATE NOT NULL,
    vremekrajatermina    DATE NOT NULL,
    napomena             VARCHAR2(60 CHAR),
    jmbg                 VARCHAR2(60 CHAR) NOT NULL,
    otkazaojmbg          VARCHAR2(60 CHAR),
    idposlovnogobjekta   INTEGER NOT NULL,
    kodusluge            VARCHAR2(60 CHAR) NOT NULL,
    telefonklijenta      VARCHAR2(60 CHAR) NOT NULL,
    vremeotkazatermina   DATE,
    razlogotkaza         VARCHAR2(60 CHAR)
);

ALTER TABLE zakaze_termin
    ADD CHECK ( ( otkazaojmbg IS NULL
                  AND vremeotkazatermina IS NULL
                  AND razlogotkaza IS NULL )
                OR ( otkazaojmbg IS NOT NULL
                     AND vremeotkazatermina IS NOT NULL ) );

ALTER TABLE zakaze_termin
    ADD CONSTRAINT zakaze_termin_pk PRIMARY KEY ( telefonklijenta,
                                                  idposlovnogobjekta,
                                                  kodusluge,
                                                  jmbg );

CREATE TABLE zaposleni (
    jmbg                VARCHAR2(60 CHAR) NOT NULL,
    imezaposlenog       VARCHAR2(60 CHAR) NOT NULL,
    prezimezaposlenog   VARCHAR2(60 CHAR) NOT NULL,
    lozinka             VARCHAR2(60 CHAR) NOT NULL,
    duznost             VARCHAR2(20 CHAR) NOT NULL,
    idposlovnogobjekta  INTEGER NOT NULL
);

ALTER TABLE zaposleni
    ADD CHECK ( duznost IN ( 'admin', 'radnik' ) );

ALTER TABLE zaposleni ADD CONSTRAINT zaposleni_pk PRIMARY KEY ( jmbg );

ALTER TABLE admin
    ADD CONSTRAINT admin_zaposleni_fk FOREIGN KEY ( jmbg )
        REFERENCES zaposleni ( jmbg );

ALTER TABLE ima_uslugu
    ADD CONSTRAINT ima_uslugu_poslovniobjekat_fk FOREIGN KEY ( idposlovnogobjekta )
        REFERENCES poslovniobjekat ( idposlovnogobjekta );

ALTER TABLE ima_uslugu
    ADD CONSTRAINT ima_uslugu_usluga_fk FOREIGN KEY ( kodusluge )
        REFERENCES usluga ( kodusluge );

ALTER TABLE klijent
    ADD CONSTRAINT klijent_admin_fk FOREIGN KEY ( blokiraojmbg )
        REFERENCES admin ( jmbg );

ALTER TABLE poslovniobjekat
    ADD CONSTRAINT poslovniobjekat_grad_fk FOREIGN KEY ( postanskibroj )
        REFERENCES grad ( postanskibroj );

ALTER TABLE poslovniobjekat
    ADD CONSTRAINT poslovniobjekat_preduzece_fk FOREIGN KEY ( pib )
        REFERENCES preduzece ( pib );

ALTER TABLE pruza_uslugu
    ADD CONSTRAINT pruza_uslugu_ima_uslugu_fk FOREIGN KEY ( idposlovnogobjekta,
                                                            kodusluge )
        REFERENCES ima_uslugu ( idposlovnogobjekta,
                                kodusluge );

ALTER TABLE pruza_uslugu
    ADD CONSTRAINT pruza_uslugu_radnik_fk FOREIGN KEY ( jmbg )
        REFERENCES radnik ( jmbg );

ALTER TABLE radnik
    ADD CONSTRAINT radnik_zaposleni_fk FOREIGN KEY ( jmbg )
        REFERENCES zaposleni ( jmbg );

ALTER TABLE radnovreme
    ADD CONSTRAINT radnovreme_zaposleni_fk FOREIGN KEY ( jmbg )
        REFERENCES zaposleni ( jmbg );

ALTER TABLE sadrzi
    ADD CONSTRAINT sadrzi_paket_fk FOREIGN KEY ( idpaketa )
        REFERENCES paket ( idpaketa );

ALTER TABLE sadrzi
    ADD CONSTRAINT sadrzi_ugovor_fk FOREIGN KEY ( idugovora,
                                                  pib )
        REFERENCES ugovor ( idugovora,
                            pib );

ALTER TABLE ugovor
    ADD CONSTRAINT ugovor_preduzece_fk FOREIGN KEY ( pib )
        REFERENCES preduzece ( pib );

ALTER TABLE usluga
    ADD CONSTRAINT usluga_preduzece_fk FOREIGN KEY ( pib )
        REFERENCES preduzece ( pib );

ALTER TABLE zadatak
    ADD CONSTRAINT zadatak_zaposleni_fk FOREIGN KEY ( jmbg )
        REFERENCES zaposleni ( jmbg );

ALTER TABLE zakaze_termin
    ADD CONSTRAINT zakaze_termin_klijent_fk FOREIGN KEY ( telefonklijenta )
        REFERENCES klijent ( telefonklijenta );

ALTER TABLE zakaze_termin
    ADD CONSTRAINT zakaze_termin_pruza_uslugu_fk FOREIGN KEY ( idposlovnogobjekta,
                                                               kodusluge,
                                                               jmbg )
        REFERENCES pruza_uslugu ( idposlovnogobjekta,
                                  kodusluge,
                                  jmbg );

ALTER TABLE zakaze_termin
    ADD CONSTRAINT zakaze_termin_radnik_fk FOREIGN KEY ( otkazaojmbg )
        REFERENCES radnik ( jmbg );

ALTER TABLE zaposleni
    ADD CONSTRAINT zaposleni_poslovniobjekat_fk FOREIGN KEY ( idposlovnogobjekta )
        REFERENCES poslovniobjekat ( idposlovnogobjekta );

CREATE OR REPLACE TRIGGER arc_fkarc_3_radnik BEFORE
    INSERT OR UPDATE OF jmbg ON radnik
    FOR EACH ROW
DECLARE
    d VARCHAR2(20 CHAR);
BEGIN
    SELECT
        a.duznost
    INTO d
    FROM
        zaposleni a
    WHERE
        a.jmbg = :new.jmbg;

    IF ( d IS NULL OR d <> 'radnik' ) THEN
        raise_application_error(-20223,
                               'FK Radnik_Zaposleni_FK in Table Radnik violates Arc constraint on Table Zaposleni - discriminator column Duznost doesn''t have value ''radnik''');
    END IF;

EXCEPTION
    WHEN no_data_found THEN
        NULL;
    WHEN OTHERS THEN
        RAISE;
END;
/

CREATE OR REPLACE TRIGGER arc_fkarc_3_admin BEFORE
    INSERT OR UPDATE OF jmbg ON admin
    FOR EACH ROW
DECLARE
    d VARCHAR2(20 CHAR);
BEGIN
    SELECT
        a.duznost
    INTO d
    FROM
        zaposleni a
    WHERE
        a.jmbg = :new.jmbg;

    IF ( d IS NULL OR d <> 'admin' ) THEN
        raise_application_error(-20223,
                               'FK Admin_Zaposleni_FK in Table Admin violates Arc constraint on Table Zaposleni - discriminator column Duznost doesn''t have value ''admin''');
    END IF;

EXCEPTION
    WHEN no_data_found THEN
        NULL;
    WHEN OTHERS THEN
        RAISE;
END;
/



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            16
-- CREATE INDEX                             0
-- ALTER TABLE                             38
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           2
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          0
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
